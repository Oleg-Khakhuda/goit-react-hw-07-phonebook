{"version":3,"sources":["Phonebook/ContactsList/ContactsList.module.css","Phonebook/Filter/Filter.module.css","redux/contacts/types.js","redux/contacts/reducer.js","redux/store.js","redux/contacts/action.js","Phonebook/ContactForm/ContactForm.js","Phonebook/ContactsList/ContactsList.js","Phonebook/Filter/Filter.js","App.js","index.js","Phonebook/ContactForm/ContactForm.module.css"],"names":["module","exports","items","createReducer","types","state","payload","find","contact","name","alert","number","filter","id","_state","contactReducer","combineReducers","persistConfig","key","version","storage","blacklist","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","addNewContact","createAction","uuidv4","handleDelete","changeFilter","connect","dispatch","action","useState","setName","setNumber","inputNameId","inputNumberId","handleChange","e","currentTarget","value","resetForm","className","s","form","onSubmit","preventDefault","label","htmlFor","input","type","pattern","title","required","onChange","button","handleFilter","allContacts","normalizedFilter","toLowerCase","includes","contacts","target","list","map","listItem","deleteButton","onClick","inputFilterId","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b424b366.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__3O09p\",\"listItem\":\"ContactsList_listItem__3kiI_\",\"deleteButton\":\"ContactsList_deleteButton__3xa8_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Filter_form__1V-ZY\",\"label\":\"Filter_label__1fRB7\",\"input\":\"Filter_input__e8R3h\"};","export default {\n  ADD: 'contact/add',\n  DELETE: 'contact/delete',\n  CHANGE_FILTER: 'contact/changeFilter',\n};\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport types from './types';\n\nconst items = createReducer([], {\n  [types.ADD]: (state, { payload }) => {\n    if (state.find(contact => contact.name === payload.name)) {\n      alert(`${payload.name} is already in contacts!`);\n    } else if (state.find(contact => contact.number === payload.number)) {\n      alert(`${payload.number} is already in contacts!`);\n    } else return [...state, payload];\n  },\n  [types.DELETE]: (state, { payload }) => {\n    return state.filter(contact => contact.id !== payload);\n  },\n});\n\n// const items = (state = [], { type, payload }) => {\n//   switch (type) {\n//     case types.ADD:\n//       if (state.find(contact => contact.name === payload.name)) {\n//         alert(`${payload.name} is already in contacts!`);\n//       } else if (state.find(contact => contact.number === payload.number)) {\n//         alert(`${payload.number} is already in contacts!`);\n//       } else return [...state, payload];\n\n//     case types.DELETE:\n//       return state.filter(contact => contact.id !== payload);\n\n//     default:\n//       return state;\n//   }\n// };\n\nconst filter = createReducer('', {\n  [types.CHANGE_FILTER]: (_state, { payload }) => payload,\n});\n\n// const filter = (state = '', { type, payload }) => {\n//   switch (type) {\n//     case types.CHANGE_FILTER:\n//       return payload;\n\n//     default:\n//       return state;\n//   }\n// };\n\nexport const contactReducer = combineReducers({\n  items,\n  filter,\n});\n","// import { createStore, combineReducers } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\n// import { composeWithDevTools } from 'redux-devtools-extension';\nimport { contactReducer } from '../redux/contacts/reducer';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst persistConfig = {\n  key: 'contacts',\n  version: 1,\n  storage,\n  blacklist: ['filter'],\n};\n\n// export const store = createStore(contactReducer, composeWithDevTools());\n\nconst persistedReducer = persistReducer(persistConfig, contactReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\nexport const persistor = persistStore(store);\n","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\nimport types from './types';\n\nconst addNewContact = createAction(types.ADD, (name, number) => {\n  return {\n    payload: {\n      id: uuidv4(),\n      name,\n      number,\n    },\n  };\n});\nconst handleDelete = createAction(types.DELETE);\nconst changeFilter = createAction(types.CHANGE_FILTER);\n\n// const addNewContact = (name, number) => ({\n//   type: types.ADD,\n//   payload: {\n//     id: uuidv4(),\n//     name,\n//     number,\n//   },\n// });\n\n// const handleDelete = id => ({\n//   type: types.DELETE,\n//   payload: id,\n// });\n\n// const changeFilter = value => ({\n//   type: types.CHANGE_FILTER,\n//   payload: value,\n// });\n\nexport default { addNewContact, handleDelete, changeFilter };\n","import React from 'react';\nimport { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport action from '../../redux/contacts/action';\nimport { connect } from 'react-redux';\n\nimport s from './ContactForm.module.css';\n\nconst ContactForm = ({ addNewContact }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const inputNameId = uuidv4();\n  const inputNumberId = uuidv4();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    addNewContact(name, number);\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setNumber('');\n    setName('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label} htmlFor={inputNameId}>\n        Name\n      </label>\n      <input\n        className={s.input}\n        type=\"text\"\n        value={name}\n        id={inputNameId}\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        onChange={handleChange}\n      />\n      <label className={s.label} htmlFor={inputNumberId}>\n        Number\n      </label>\n      <input\n        className={s.input}\n        type=\"tel\"\n        value={number}\n        id={inputNumberId}\n        name=\"number\"\n        pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n        title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n        required\n        onChange={handleChange}\n      />\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addNewContact: (name, number) => dispatch(action.addNewContact(name, number)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import s from './ContactsList.module.css';\nimport { connect } from 'react-redux';\nimport action from '../../redux/contacts/action';\nimport PropTypes from 'prop-types';\n\nconst ContactsList = ({ contacts, handleDelete }) => {\n  return (\n    <ul className={s.list}>\n      {contacts.map(contact => (\n        <li className={s.listItem} key={contact.id}>\n          {contact.name}: {contact.number}\n          <button\n            className={s.deleteButton}\n            type=\"button\"\n            id={contact.id}\n            onClick={handleDelete}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nconst handleFilter = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return allContacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = state => ({\n  contacts: handleFilter(state.items, state.filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  handleDelete: e => dispatch(action.handleDelete(e.target.id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\n\nContactsList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport action from '../../redux/contacts/action';\nimport { connect } from 'react-redux';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, changeFilter }) => {\n  const inputFilterId = uuidv4();\n\n  return (\n    <form className={s.form}>\n      <label className={s.label} htmlFor={inputFilterId}>\n        Find contacts by name\n      </label>\n      <input\n        className={s.input}\n        type=\"text\"\n        value={value}\n        id={inputFilterId}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        onChange={changeFilter}\n      />\n    </form>\n  );\n};\n\nconst mapStateToProps = state => ({\n  value: state.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeFilter: e => dispatch(action.changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n\nFilter.propTypes = {\n  changeFilter: PropTypes.func.isRequired,\n};\n","import ContactForm from './Phonebook/ContactForm/ContactForm';\nimport ContactsList from './Phonebook/ContactsList/ContactsList';\nimport Filter from './Phonebook/Filter/Filter';\n\nconst App = () => {\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactsList />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { store, persistor } from './redux/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <PersistGate persistor={persistor}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </PersistGate>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__q8PMR\",\"input\":\"ContactForm_input__S6tWn\",\"label\":\"ContactForm_label__1oDlf\",\"button\":\"ContactForm_button__3Qy3z\"};"],"sourceRoot":""}