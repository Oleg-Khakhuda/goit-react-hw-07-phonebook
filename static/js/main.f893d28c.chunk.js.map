{"version":3,"sources":["Phonebook/ContactsList/ContactsList.module.css","Phonebook/Filter/Filter.module.css","redux/contacts/action.js","redux/contacts/operations.js","redux/contacts/reducer.js","redux/store.js","redux/contacts/selectors.js","Phonebook/ContactForm/ContactForm.js","Phonebook/ContactsList/ContactsList.js","Phonebook/Filter/Filter.js","App.js","index.js","Phonebook/ContactForm/ContactForm.module.css"],"names":["module","exports","changeFilter","createAction","axios","defaults","baseURL","fetchContacts","createAsyncThunk","_","a","rejectWithValue","get","data","message","addContact","name","number","contact","phone","post","deleteContact","contactId","delete","id","operations","items","createReducer","fulfilled","payload","state","filter","_state","error","rejected","pending","contactReducer","combineReducers","store","configureStore","reducer","contacts","middleware","getDefaultMiddleware","devTools","process","getContacts","getFilter","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","includes","ContactForm","dispatch","useDispatch","useSelector","useState","setName","setNumber","handleChange","e","currentTarget","value","resetForm","className","s","form","onSubmit","preventDefault","find","alert","label","input","type","pattern","title","required","onChange","button","ContactsList","useEffect","onDeleteContacts","target","list","map","listItem","deleteButton","onClick","Filter","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f893d28c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__3O09p\",\"listItem\":\"ContactsList_listItem__3kiI_\",\"deleteButton\":\"ContactsList_deleteButton__3xa8_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Filter_form__1V-ZY\",\"label\":\"Filter_label__1fRB7\",\"input\":\"Filter_input__e8R3h\"};","import { createAction } from '@reduxjs/toolkit';\n\n// export const fetchContactRequest = createAction('contacts/fetchContactRequest');\n// export const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\n// export const fetchContactError = createAction('contacts/fetchContactError');\n\n// export const addContactRequest = createAction('contacts/addContactRequest');\n// export const addContactSuccess = createAction('contacts/addContactSuccess');\n// export const addContactError = createAction('contacts/addContactError');\n\n// export const deleteContactRequest = createAction(\n//   'contacts/deleteContactRequest',\n// );\n// export const deleteContactSuccess = createAction(\n//   'contacts/deleteContactSuccess',\n// );\n// export const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n// import {\n//   addContactRequest,\n//   addContactSuccess,\n//   addContactError,\n//   deleteContactRequest,\n//   deleteContactSuccess,\n//   deleteContactError,\n//   fetchContactRequest,\n//   fetchContactSuccess,\n//   fetchContactError,\n// } from './action';\n\naxios.defaults.baseURL = 'https://61912c1741928b001768ff87.mockapi.io';\n\nconst fetchContacts = createAsyncThunk(\n  'contacts/fetchContacts',\n  async (_, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.get('/contacts');\n      return data;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\n// const fetchContacts = () => async dispatch => {\n//   dispatch(fetchContactRequest());\n\n//   try {\n//     const { data } = await axios.get('/contacts');\n//     dispatch(fetchContactSuccess(data));\n//   } catch (error) {\n//     dispatch(fetchContactError(error.message));\n//   }\n// };\n\nconst addContact = createAsyncThunk(\n  'contacts/addContacts',\n  async ({ name, number }, { rejectWithValue }) => {\n    const contact = {\n      name: name,\n      phone: number,\n    };\n    try {\n      const { data } = await axios.post('/contacts', contact);\n      return data;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\n// const addContact = ({name, number}) => async dispatch => {\n//   const contact = {\n//     name: name,\n//     phone: number,\n//   };\n\n//   dispatch(addContactRequest());\n\n//   try {\n//     const { data } = await axios.post('/contacts', contact);\n//     dispatch(addContactSuccess(data));\n//   } catch (error) {\n//     dispatch(addContactError(error));\n//   }\n// };\n\nconst deleteContact = createAsyncThunk(\n  'deleteContact',\n  async (contactId, { rejectWithValue }) => {\n    try {\n      const {\n        data: { id },\n      } = await axios.delete(`/contacts/${contactId}`);\n      return id;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\n// const deleteContact = contactId => async dispatch => {\n//   dispatch(deleteContactRequest());\n\n//   try {\n//     await axios.delete(`/contacts/${contactId}`);\n//     dispatch(deleteContactSuccess(contactId));\n//   } catch (error) {\n//     dispatch(deleteContactError(error));\n//   }\n// };\n\nconst operations = { fetchContacts, addContact, deleteContact };\n\nexport default operations;\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport {\n  // fetchContactSuccess,\n  // addContactSuccess,\n  // deleteContactSuccess,\n  // fetchContactRequest,\n  // fetchContactError,\n  changeFilter,\n} from '../contacts/action';\nimport operations from './operations';\n\nconst items = createReducer([], {\n  // [fetchContactSuccess]: (_, { payload }) => payload,\n  [operations.fetchContacts.fulfilled]: (_, { payload }) => payload,\n  // [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [operations.addContact.fulfilled]: (state, { payload }) => [\n    ...state,\n    payload,\n  ],\n  // [deleteContactSuccess]: (state, { payload }) =>\n  //   state.filter(({ id }) => id !== payload),\n  [operations.deleteContact.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_state, { payload }) => payload,\n});\n\nconst error = createReducer(null, {\n  [operations.fetchContacts.rejected]: (_, { payload }) => payload,\n  [operations.fetchContacts.pending]: () => null,\n});\n\nexport const contactReducer = combineReducers({\n  items,\n  filter,\n  error,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport { contactReducer } from '../redux/contacts/reducer';\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactReducer,\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware(),\n  devTools: process.env.NODE_ENV === 'development',\n});\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getFilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import React from 'react';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport operations from '../../redux/contacts/operations';\nimport { getContacts } from '../../redux/contacts/selectors';\nimport s from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (contacts.find(contact => contact.name === name)) {\n      return alert(`${name} is already in contacts!`);\n    } else if (contacts.find(contact => contact.phone === number)) {\n      return alert(`${number} is already in contacts!`);\n    }\n    dispatch(operations.addContact({ name, number }));\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setNumber('');\n    setName('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>Name</label>\n      <input\n        className={s.input}\n        type=\"text\"\n        value={name}\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        onChange={handleChange}\n      />\n      <label className={s.label}>Number</label>\n      <input\n        className={s.input}\n        type=\"tel\"\n        value={number}\n        name=\"number\"\n        pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n        title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n        required\n        onChange={handleChange}\n      />\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import s from './ContactsList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilteredContacts } from '../../redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport operations from '../../redux/contacts/operations';\n\nconst ContactsList = () => {\n  const contacts = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(operations.fetchContacts());\n  }, [dispatch]);\n\n  const onDeleteContacts = e => dispatch(operations.deleteContact(e.target.id));\n\n  return (\n    <ul className={s.list}>\n      {contacts.map(contact => (\n        <li className={s.listItem} key={contact.id}>\n          {contact.name}: {contact.phone}\n          <button\n            className={s.deleteButton}\n            type=\"button\"\n            id={contact.id}\n            onClick={onDeleteContacts}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactsList;\n","import { changeFilter } from '../../redux/contacts/action';\nimport { getFilter } from '../../redux/contacts/selectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport s from './Filter.module.css';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const onChangeFilter = e => dispatch(changeFilter(e.target.value));\n\n  return (\n    <form className={s.form}>\n      <label className={s.label}>Find contacts by name</label>\n      <input\n        className={s.input}\n        type=\"text\"\n        value={value}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        onChange={onChangeFilter}\n      />\n    </form>\n  );\n};\n\nexport default Filter;\n","import ContactForm from './Phonebook/ContactForm/ContactForm';\nimport ContactsList from './Phonebook/ContactsList/ContactsList';\nimport Filter from './Phonebook/Filter/Filter';\n\nconst App = () => {\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactsList />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { store } from './redux/store';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__q8PMR\",\"input\":\"ContactForm_input__S6tWn\",\"label\":\"ContactForm_label__1oDlf\",\"button\":\"ContactForm_button__3Qy3z\"};"],"sourceRoot":""}