{"version":3,"sources":["Phonebook/ContactsList/ContactsList.module.css","Phonebook/Filter/Filter.module.css","redux/contacts/types.js","redux/contacts/reducer.js","redux/store.js","redux/contacts/action.js","Phonebook/ContactForm/ContactForm.js","redux/contacts/selectors.js","Phonebook/ContactsList/ContactsList.js","Phonebook/Filter/Filter.js","App.js","index.js","Phonebook/ContactForm/ContactForm.module.css"],"names":["module","exports","items","createReducer","types","state","payload","find","contact","name","alert","number","filter","id","_state","contactReducer","combineReducers","store","configureStore","reducer","contacts","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","addNewContact","createAction","uuidv4","handleDelete","changeFilter","ContactForm","dispatch","useDispatch","useState","setName","setNumber","inputNameId","inputNumberId","handleChange","e","currentTarget","value","resetForm","className","s","form","onSubmit","preventDefault","action","label","htmlFor","input","type","pattern","title","required","onChange","button","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","includes","ContactsList","useSelector","onDeleteContacts","target","list","map","listItem","deleteButton","onClick","connect","inputFilterId","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.449766e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__3O09p\",\"listItem\":\"ContactsList_listItem__3kiI_\",\"deleteButton\":\"ContactsList_deleteButton__3xa8_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Filter_form__1V-ZY\",\"label\":\"Filter_label__1fRB7\",\"input\":\"Filter_input__e8R3h\"};","export default {\n  ADD: 'contact/add',\n  DELETE: 'contact/delete',\n  CHANGE_FILTER: 'contact/changeFilter',\n};\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport types from './types';\n\nconst items = createReducer([], {\n  [types.ADD]: (state, { payload }) => {\n    if (state.find(contact => contact.name === payload.name)) {\n      alert(`${payload.name} is already in contacts!`);\n    } else if (state.find(contact => contact.number === payload.number)) {\n      alert(`${payload.number} is already in contacts!`);\n    } else return [...state, payload];\n  },\n  [types.DELETE]: (state, { payload }) => {\n    return state.filter(contact => contact.id !== payload);\n  },\n});\n\nconst filter = createReducer('', {\n  [types.CHANGE_FILTER]: (_state, { payload }) => payload,\n});\n\nexport const contactReducer = combineReducers({\n  items,\n  filter,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport { contactReducer } from '../redux/contacts/reducer';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactReducer,\n  },\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\nimport types from './types';\n\nconst addNewContact = createAction(types.ADD, (name, number) => {\n  return {\n    payload: {\n      id: uuidv4(),\n      name,\n      number,\n    },\n  };\n});\nconst handleDelete = createAction(types.DELETE);\nconst changeFilter = createAction(types.CHANGE_FILTER);\n\nexport default { addNewContact, handleDelete, changeFilter };\n","import React from 'react';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport action from '../../redux/contacts/action';\nimport s from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const inputNameId = uuidv4();\n  const inputNumberId = uuidv4();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(action.addNewContact(name, number));\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setNumber('');\n    setName('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label} htmlFor={inputNameId}>\n        Name\n      </label>\n      <input\n        className={s.input}\n        type=\"text\"\n        value={name}\n        id={inputNameId}\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        onChange={handleChange}\n      />\n      <label className={s.label} htmlFor={inputNumberId}>\n        Number\n      </label>\n      <input\n        className={s.input}\n        type=\"tel\"\n        value={number}\n        id={inputNumberId}\n        name=\"number\"\n        pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n        title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n        required\n        onChange={handleChange}\n      />\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getFilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import s from './ContactsList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilteredContacts } from '../../redux/contacts/selectors';\nimport action from '../../redux/contacts/action';\n\nconst ContactsList = () => {\n  const contacts = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n\n  const onDeleteContacts = e => dispatch(action.handleDelete(e.target.id));\n  return (\n    <ul className={s.list}>\n      {contacts.map(contact => (\n        <li className={s.listItem} key={contact.id}>\n          {contact.name}: {contact.number}\n          <button\n            className={s.deleteButton}\n            type=\"button\"\n            id={contact.id}\n            onClick={onDeleteContacts}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactsList;\n","import PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport action from '../../redux/contacts/action';\nimport { connect } from 'react-redux';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, changeFilter }) => {\n  const inputFilterId = uuidv4();\n\n  return (\n    <form className={s.form}>\n      <label className={s.label} htmlFor={inputFilterId}>\n        Find contacts by name\n      </label>\n      <input\n        className={s.input}\n        type=\"text\"\n        value={value}\n        id={inputFilterId}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        onChange={changeFilter}\n      />\n    </form>\n  );\n};\n\nconst mapStateToProps = state => ({\n  value: state.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeFilter: e => dispatch(action.changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n\nFilter.propTypes = {\n  changeFilter: PropTypes.func.isRequired,\n};\n","import ContactForm from './Phonebook/ContactForm/ContactForm';\nimport ContactsList from './Phonebook/ContactsList/ContactsList';\nimport Filter from './Phonebook/Filter/Filter';\n\nconst App = () => {\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactsList />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { store, persistor } from './redux/store';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <PersistGate persistor={persistor}> */}\n    <Provider store={store}>\n      <App />\n    </Provider>\n    {/* </PersistGate> */}\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__q8PMR\",\"input\":\"ContactForm_input__S6tWn\",\"label\":\"ContactForm_label__1oDlf\",\"button\":\"ContactForm_button__3Qy3z\"};"],"sourceRoot":""}