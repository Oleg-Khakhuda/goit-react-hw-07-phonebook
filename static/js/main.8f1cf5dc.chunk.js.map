{"version":3,"sources":["Phonebook/ContactsList/ContactsList.module.css","Phonebook/Filter/Filter.module.css","redux/contacts/types.js","redux/contacts/action.js","redux/contacts/reducer.js","redux/store.js","redux/contacts/contact-operations.js","redux/contacts/selectors.js","Phonebook/ContactForm/ContactForm.js","Phonebook/ContactsList/ContactsList.js","Phonebook/Filter/Filter.js","App.js","index.js","Phonebook/ContactForm/ContactForm.module.css"],"names":["module","exports","types","ADD","DELETE","CHANGE_FILTER","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","items","createReducer","_","payload","state","filter","contact","id","_state","contactReducer","combineReducers","store","configureStore","reducer","contacts","middleware","getDefaultMiddleware","axios","defaults","baseURL","operations","fetchContacts","dispatch","a","get","data","message","addContact","text","number","name","phone","post","deleteContact","contactId","delete","getContacts","getFilter","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","includes","ContactForm","useDispatch","useSelector","useState","setName","setNumber","handleChange","e","currentTarget","value","resetForm","className","s","form","onSubmit","preventDefault","find","alert","label","input","type","pattern","title","required","onChange","button","ContactsList","useEffect","onDeleteContacts","target","list","map","listItem","deleteButton","onClick","Filter","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,2BAA2B,SAAW,+BAA+B,aAAe,qC,mBCA7GD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,MAAQ,sBAAsB,MAAQ,wB,gICKrEC,EAND,CACZC,IAAK,cACLC,OAAQ,iBACRC,cAAe,wBCDJC,EAAsBC,YAAa,gCACnCC,EAAsBD,YAAa,gCACnCE,EAAoBF,YAAa,8BAEjCG,EAAoBH,YAAa,8BACjCI,EAAoBJ,YAAa,8BACjCK,EAAkBL,YAAa,4BAE/BM,EAAuBN,YAClC,iCAEWO,EAAuBP,YAClC,iCAEWQ,EAAqBR,YAAa,+BAElCS,EAAeT,YAAa,yBCRnCU,EAAQC,YAAc,IAAD,mBACxBV,GAAsB,SAACW,EAAD,YAAMC,WADJ,cAExBT,GAAoB,SAACU,EAAD,OAAUD,EAAV,EAAUA,QAAV,4BAA4BC,GAA5B,CAAmCD,OAF/B,cAGxBlB,EAAME,QAAS,SAACiB,EAAD,GAAyB,IAAfD,EAAc,EAAdA,QACxB,OAAOC,EAAMC,QAAO,SAAAC,GAAO,OAAIA,EAAQC,KAAOJ,QAJvB,cAMxBN,GAAuB,SAACO,EAAD,OAAUD,EAAV,EAAUA,QAAV,OACtBC,EAAMC,QAAO,qBAAGE,KAAgBJ,QAPT,IAUrBE,EAASJ,YAAc,GAAD,eACzBF,GAAe,SAACS,EAAD,YAAWL,YAGhBM,EAAiBC,YAAgB,CAC5CV,QACAK,WCvBWM,EAAQC,YAAe,CAClCC,QAAS,CACPC,SAAUL,GAEZM,WAAY,SAAAC,GAAoB,OAAIA,O,gECMtCC,IAAMC,SAASC,QAAU,8CAEzB,IAsCMC,EAAa,CAAEC,cAtCC,yDAAM,WAAMC,GAAN,iBAAAC,EAAA,6DAC1BD,EAASjC,KADiB,kBAID4B,IAAMO,IAAI,aAJT,gBAIhBC,EAJgB,EAIhBA,KACRH,EAAS/B,EAAoBkC,IALL,gDAOxBH,EAAS9B,EAAkB,KAAMkC,UAPT,yDAAN,uDAsCcC,WA3BjB,SAACC,EAAMC,GAAP,8CAAkB,WAAMP,GAAN,mBAAAC,EAAA,6DAC7BjB,EAAU,CACdwB,KAAMF,EACNG,MAAOF,GAGTP,EAAS7B,KAN0B,kBASVwB,IAAMe,KAAK,YAAa1B,GATd,gBASzBmB,EATyB,EASzBA,KACRH,EAAS5B,EAAkB+B,IAVM,kDAYjCH,EAAS3B,EAAgB,EAAD,KAZS,0DAAlB,uDA2B6BsC,cAX1B,SAAAC,GAAS,8CAAI,WAAMZ,GAAN,SAAAC,EAAA,6DACjCD,EAAS1B,KADwB,kBAIzBqB,IAAMkB,OAAN,oBAA0BD,IAJD,OAK/BZ,EAASzB,EAAqBqC,IALC,gDAO/BZ,EAASxB,EAAmB,EAAD,KAPI,yDAAJ,wDAahBsB,I,QCrDFgB,EAAc,SAAAhC,GAAK,OAAIA,EAAMU,SAASd,OACtCqC,EAAY,SAAAjC,GAAK,OAAIA,EAAMU,SAAST,QAEpCiC,EAAsBC,YACjC,CAACH,EAAaC,IACd,SAACvB,EAAUT,GACT,IAAMmC,EAAmBnC,EAAOoC,cAEhC,OAAO3B,EAAST,QAAO,qBAAGyB,KACnBW,cAAcC,SAASF,S,uBCkEnBG,EAtEK,WAClB,IAAMrB,EAAWsB,cACX9B,EAAW+B,YAAYT,GAE7B,EAAwBU,mBAAS,IAAjC,mBAAOhB,EAAP,KAAaiB,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOjB,EAAP,KAAemB,EAAf,KAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,cAAlBrB,EAAR,EAAQA,KAAMsB,EAAd,EAAcA,MACd,OAAQtB,GACN,IAAK,OACHiB,EAAQK,GACR,MAEF,IAAK,SACHJ,EAAUI,GACV,MAEF,QACE,SAeAC,EAAY,WAChBL,EAAU,IACVD,EAAQ,KAGV,OACE,uBAAMO,UAAWC,IAAEC,KAAMC,SAjBN,SAAAP,GAEnB,OADAA,EAAEQ,iBACE5C,EAAS6C,MAAK,SAAArD,GAAO,OAAIA,EAAQwB,OAASA,KACrC8B,MAAM,GAAD,OAAI9B,EAAJ,6BACHhB,EAAS6C,MAAK,SAAArD,GAAO,OAAIA,EAAQyB,QAAUF,KAC7C+B,MAAM,GAAD,OAAI/B,EAAJ,8BAEdP,EAASF,EAAWO,WAAWG,EAAMD,SACrCwB,MASA,UACE,uBAAOC,UAAWC,IAAEM,MAApB,kBACA,uBACEP,UAAWC,IAAEO,MACbC,KAAK,OACLX,MAAOtB,EACPA,KAAK,OACLkC,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUlB,IAEZ,uBAAOK,UAAWC,IAAEM,MAApB,oBACA,uBACEP,UAAWC,IAAEO,MACbC,KAAK,MACLX,MAAOvB,EACPC,KAAK,SACLkC,QAAQ,+FACRC,MAAM,mlBACNC,UAAQ,EACRC,SAAUlB,IAEZ,wBAAQK,UAAWC,IAAEa,OAAQL,KAAK,SAAlC,6B,iBCnCSM,EA7BM,WACnB,IAAMvD,EAAW+B,YAAYP,GACvBhB,EAAWsB,cAEjB0B,qBAAU,WACRhD,EAASF,EAAWC,mBACnB,CAACC,IAEJ,IAAMiD,EAAmB,SAAArB,GAAC,OAAI5B,EAASF,EAAWa,cAAciB,EAAEsB,OAAOjE,MAEzE,OACE,oBAAI+C,UAAWC,IAAEkB,KAAjB,SACG3D,EAAS4D,KAAI,SAAApE,GAAO,OACnB,qBAAIgD,UAAWC,IAAEoB,SAAjB,UACGrE,EAAQwB,KADX,KACmBxB,EAAQyB,MACzB,wBACEuB,UAAWC,IAAEqB,aACbb,KAAK,SACLxD,GAAID,EAAQC,GACZsE,QAASN,EAJX,sBAF8BjE,EAAQC,U,iBCMjCuE,EApBA,WACb,IAAM1B,EAAQP,YAAYR,GACpBf,EAAWsB,cAIjB,OACE,uBAAMU,UAAWC,IAAEC,KAAnB,UACE,uBAAOF,UAAWC,IAAEM,MAApB,mCACA,uBACEP,UAAWC,IAAEO,MACbC,KAAK,OACLX,MAAOA,EACPY,QAAQ,yHACRG,SAViB,SAAAjB,GAAC,OAAI5B,EAASvB,EAAamD,EAAEsB,OAAOpB,eCO9C2B,EAZH,WACV,OACE,gCACE,2CACA,cAAC,EAAD,IACA,0CACA,cAAC,EAAD,IACA,cAAC,EAAD,QCJNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUvE,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJwE,SAASC,eAAe,U,kBCZ1BrG,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,OAAS,+B","file":"static/js/main.8f1cf5dc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__3O09p\",\"listItem\":\"ContactsList_listItem__3kiI_\",\"deleteButton\":\"ContactsList_deleteButton__3xa8_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Filter_form__1V-ZY\",\"label\":\"Filter_label__1fRB7\",\"input\":\"Filter_input__e8R3h\"};","const types = {\n  ADD: 'contact/add',\n  DELETE: 'contact/delete',\n  CHANGE_FILTER: 'contact/changeFilter',\n};\n\nexport default types;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\nexport const fetchContactError = createAction('contacts/fetchContactError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport types from './types';\nimport {\n  fetchContactSuccess,\n  addContactSuccess,\n  deleteContactSuccess,\n  changeFilter,\n} from '../contacts/action';\n\nconst items = createReducer([], {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [types.DELETE]: (state, { payload }) => {\n    return state.filter(contact => contact.id !== payload);\n  },\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_state, { payload }) => payload,\n});\n\nexport const contactReducer = combineReducers({\n  items,\n  filter,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport { contactReducer } from '../redux/contacts/reducer';\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactReducer,\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware(),\n});\n","import axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n} from '../contacts/action';\n\naxios.defaults.baseURL = 'https://61912c1741928b001768ff87.mockapi.io';\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(fetchContactRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactError(error.message));\n  }\n};\n\nconst addContact = (text, number) => async dispatch => {\n  const contact = {\n    name: text,\n    phone: number,\n  };\n\n  dispatch(addContactRequest());\n\n  try {\n    const { data } = await axios.post('/contacts', contact);\n    dispatch(addContactSuccess(data));\n  } catch (error) {\n    dispatch(addContactError(error));\n  }\n};\n\nconst deleteContact = contactId => async dispatch => {\n  dispatch(deleteContactRequest());\n\n  try {\n    await axios.delete(`/contacts/${contactId}`);\n    dispatch(deleteContactSuccess(contactId));\n  } catch (error) {\n    dispatch(deleteContactError(error));\n  }\n};\n\nconst operations = { fetchContacts, addContact, deleteContact };\n\nexport default operations;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getFilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import React from 'react';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport operations from '../../redux/contacts/contact-operations';\nimport { getContacts } from '../../redux/contacts/selectors';\nimport s from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (contacts.find(contact => contact.name === name)) {\n      return alert(`${name} is already in contacts!`);\n    } else if (contacts.find(contact => contact.phone === number)) {\n      return alert(`${number} is already in contacts!`);\n    }\n    dispatch(operations.addContact(name, number));\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setNumber('');\n    setName('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>Name</label>\n      <input\n        className={s.input}\n        type=\"text\"\n        value={name}\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        onChange={handleChange}\n      />\n      <label className={s.label}>Number</label>\n      <input\n        className={s.input}\n        type=\"tel\"\n        value={number}\n        name=\"number\"\n        pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n        title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n        required\n        onChange={handleChange}\n      />\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import s from './ContactsList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilteredContacts } from '../../redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport operations from '../../redux/contacts/contact-operations';\n\nconst ContactsList = () => {\n  const contacts = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(operations.fetchContacts());\n  }, [dispatch]);\n\n  const onDeleteContacts = e => dispatch(operations.deleteContact(e.target.id));\n\n  return (\n    <ul className={s.list}>\n      {contacts.map(contact => (\n        <li className={s.listItem} key={contact.id}>\n          {contact.name}: {contact.phone}\n          <button\n            className={s.deleteButton}\n            type=\"button\"\n            id={contact.id}\n            onClick={onDeleteContacts}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactsList;\n","import { changeFilter } from '../../redux/contacts/action';\nimport { getFilter } from '../../redux/contacts/selectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport s from './Filter.module.css';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const onChangeFilter = e => dispatch(changeFilter(e.target.value));\n\n  return (\n    <form className={s.form}>\n      <label className={s.label}>Find contacts by name</label>\n      <input\n        className={s.input}\n        type=\"text\"\n        value={value}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        onChange={onChangeFilter}\n      />\n    </form>\n  );\n};\n\nexport default Filter;\n","import ContactForm from './Phonebook/ContactForm/ContactForm';\nimport ContactsList from './Phonebook/ContactsList/ContactsList';\nimport Filter from './Phonebook/Filter/Filter';\n\nconst App = () => {\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactsList />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { store } from './redux/store';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__q8PMR\",\"input\":\"ContactForm_input__S6tWn\",\"label\":\"ContactForm_label__1oDlf\",\"button\":\"ContactForm_button__3Qy3z\"};"],"sourceRoot":""}